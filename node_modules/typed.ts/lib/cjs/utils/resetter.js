"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Resetter = void 0;
class Resetter {
    constructor() {
        this._reset = false;
        this._resetPromise = new Promise(resolve => (this._resolveReset = resolve));
        this._singleReset = false;
        this._resetSinglePromise = new Promise(resolve => (this._resolveSingleReset = resolve));
    }
    async reset() {
        this._reset = true;
        this._resolveReset();
        await new Promise(resolve => setTimeout(() => {
            this.resetResetter();
            resolve();
        }, 10) // wait a bit to make sure the reset promise is resolved @todo find a better way
        );
    }
    resetResetter() {
        this._reset = false;
        this._resetPromise = new Promise(resolve => (this._resolveReset = resolve));
    }
    get isReset() {
        return this._reset;
    }
    get resetPromise() {
        return this._resetPromise;
    }
    singleReset() {
        this._singleReset = true;
        this._resolveSingleReset();
    }
    resetSingleResetter() {
        this._singleReset = false;
        this._resetSinglePromise = new Promise(resolve => (this._resolveSingleReset = resolve));
    }
    get isSingleReset() {
        return this._singleReset;
    }
    get resetSinglePromise() {
        return this._resetSinglePromise;
    }
}
exports.Resetter = Resetter;
//# sourceMappingURL=resetter.js.map