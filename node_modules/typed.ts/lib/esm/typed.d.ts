import { Keyboard } from './types/keyboard.js';
import { ConstructorTypingOptions, EraseTypingOptions, SentanceTypingOptions } from './types/options';
export declare class Typed {
    private readonly _resetter;
    private readonly _randomChars;
    private readonly _options;
    private readonly _typeQueue;
    private readonly _ffQueue;
    private _queue;
    private _resultItems;
    private _fastForward;
    private _lettersSinceLastError;
    private readonly _endResultItems;
    private readonly _fastForwardOptions;
    constructor(options: ConstructorTypingOptions);
    private get options();
    addKeyboard(locale: string, keyboard: Keyboard): void;
    reset(clearTexts?: boolean): Promise<void>;
    type(sentance: string, options?: SentanceTypingOptions): Typed;
    backspace(length: number, options?: EraseTypingOptions): Typed;
    wait(delay: number): Typed;
    run(): Promise<void>;
    fastForward(): void;
    private getTextAtIndex;
    private doQueueAction;
    private typeLetter;
    private typeBackspace;
    private waitItem;
    private incrementQueue;
    private shouldError;
    private maybeDoError;
    private calculateErrorProbability;
    private addLetter;
    private addLetterTo;
    private deleteLetter;
    private deleteLetterFrom;
    private updateText;
    private getCurrentText;
}
