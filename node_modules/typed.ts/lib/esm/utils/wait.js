import { randomInt } from './random-int.js';
export const wait = async (ms, resetter) => {
    if (!ms) {
        return;
    }
    if (resetter.isReset) {
        return;
    }
    const delay = typeof ms === 'number' ? ms : randomInt(ms.min, ms.max);
    let resolveFn;
    const promise = new Promise(resolve => (resolveFn = resolve));
    const interval = setTimeout(() => {
        clearInterval(interval);
        resolveFn();
    }, delay);
    await Promise.race([promise, resetter.resetPromise, resetter.resetSinglePromise]);
    if (resetter.isSingleReset) {
        resetter.resetSingleResetter();
    }
};
//# sourceMappingURL=wait.js.map