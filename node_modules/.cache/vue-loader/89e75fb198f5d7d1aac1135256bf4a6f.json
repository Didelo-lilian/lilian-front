{"remainingRequest":"/var/www/html/php/lilian-vue-cli/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/var/www/html/php/lilian-vue-cli/src/components/Typed.vue?vue&type=template&id=0bb52ee8&scoped=true&ts=true","dependencies":[{"path":"/var/www/html/php/lilian-vue-cli/src/components/Typed.vue","mtime":1650988975738},{"path":"/var/www/html/php/lilian-vue-cli/node_modules/cache-loader/dist/cjs.js","mtime":1649792615190},{"path":"/var/www/html/php/lilian-vue-cli/node_modules/thread-loader/dist/cjs.js","mtime":1649792615210},{"path":"/var/www/html/php/lilian-vue-cli/node_modules/babel-loader/lib/index.js","mtime":1649792615186},{"path":"/var/www/html/php/lilian-vue-cli/node_modules/ts-loader/index.js","mtime":1649792621564},{"path":"/var/www/html/php/lilian-vue-cli/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1649792623288},{"path":"/var/www/html/php/lilian-vue-cli/node_modules/cache-loader/dist/cjs.js","mtime":1649792615190},{"path":"/var/www/html/php/lilian-vue-cli/node_modules/vue-loader-v16/dist/index.js","mtime":1649792623288}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cgk8ZGl2IGNsYXNzPSJ0eXBlZCI+CgkJPHNwYW4+e3sgdHlwZWRTdHJpbmcgfX08L3NwYW4+Cgk8L2Rpdj4K"},{"version":3,"sources":["/var/www/html/php/lilian-vue-cli/src/components/Typed.vue"],"names":[],"mappings":";CACC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC9B,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/var/www/html/php/lilian-vue-cli/src/components/Typed.vue","sourceRoot":"","sourcesContent":["<template>\n\t<div class=\"typed\">\n\t\t<span>{{ typedString }}</span>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nimport { Typed } from \"typed.ts\";\n\nexport default defineComponent({\n\tname: \"TypedComponent\",\n\tdata() {\n\t\treturn {\n\t\t\ttypedString: \"\",\n\t\t};\n\t},\n\tasync mounted() {\n\t\tconst typed = new Typed({\n\t\t\tcallback: (text) => (this.typedString = text),\n\t\t});\n\n\t\tconst strings = [\n\t\t\t\"Soler Lilian\",\n\t\t\t\"Entreprise Didelo\",\n\t\t\t\"Developpeur Web\",\n\t\t\t\"Platforme pour élèves\",\n\t\t];\n\n\t\tconst options = {\n\t\t\teraseDelay: { min: 40, max: 80 },\n\t\t\tperLetterDelay: { min: 80, max: 160 },\n\t\t\terrorMultiplier: 0,\n\t\t};\n\n\t\tstrings.forEach((string) => {\n\t\t\ttyped\n\t\t\t\t.type(string, options)\n\t\t\t\t.wait(1000)\n\t\t\t\t.backspace(string.length)\n\t\t\t\t.wait(1000);\n\t\t});\n\t\tawait typed.run();\n\t\tawait typed.reset(true);\n\t\ttyped.type(strings[0], options);\n\t\ttyped.run();\n\t},\n});\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\nspan {\n\tcolor: white;\n\tfont-family: Avenir, Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n}\n</style>\n"]}]}